<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--default-init-method="init"-->
<!--default-destroy-method="cleanUp">-->

    <!--Procedural triangles-->
    <bean id="equilateralTriangle" class="springjbrains.course.core.model.ProceduralTriangle">
        <property name="type" value="equilateral"/>
    </bean>

    <bean id="rightTriangle" class="springjbrains.course.core.model.ProceduralTriangle">
        <constructor-arg value="right"/>
        <constructor-arg value="20"/>
    </bean>

    <bean id="rightArgumentTypedTriangle" class="springjbrains.course.core.model.ProceduralTriangle">
        <constructor-arg value="10" type="int"/>
        <constructor-arg value="right" type="java.lang.String"/>
    </bean>
    <bean id="rightOrderedArgumentTriangle" class="springjbrains.course.core.model.ProceduralTriangle">
        <constructor-arg value="10" index="1"/>
        <constructor-arg value="right" index="0"/>
    </bean>

    <!--Object triangle-->
    <bean id="objectTriangle" class="springjbrains.course.core.model.ObjectPointSeparatedTriangle">
        <property name="pointA" ref="pointA"/>
        <property name="pointB">
            <bean class="springjbrains.course.core.model.Point">
                <property name="x" value="-20"/>
                <property name="y" value="0"/>
            </bean>
        </property>
        <property name="pointC">
            <bean class="springjbrains.course.core.model.Point">
                <property name="x" value="0"/>
                <property name="y" value="20"/>
            </bean>
        </property>
    </bean>

    <!--Object  point listed triangle-->
    <bean id="objectPointListedTriangle" class="springjbrains.course.core.model.ObjectPointListedTriangle">
        <property name="points">
            <list>
                <ref bean="pointA"/>
                <ref bean="pointB"/>
                <ref bean="pointC"/>
            </list>
        </property>
    </bean>

    <!--Autowired object triangle-->
    <bean id="autowiredObjectTriangle" class="springjbrains.course.core.model.ObjectPointSeparatedTriangle" autowire="byName">
    </bean>

    <!--Triangle points-->
    <bean id="pointA" class="springjbrains.course.core.model.Point">
        <property name="x" value="0"/>
        <property name="y" value="0"/>
    </bean>
    <bean id="pointB" class="springjbrains.course.core.model.Point">
        <property name="x" value="-20"/>
        <property name="y" value="0"/>
    </bean>
    <bean id="pointC" class="springjbrains.course.core.model.Point">
        <property name="x" value="0"/>
        <property name="y" value="20"/>
    </bean>

    <!--Bean definition inheritance-->
        <!--Parent triangles-->
    <bean id="parentObjectPointSeparatedTriangle" class="springjbrains.course.core.model.ObjectPointSeparatedTriangle" abstract="true">
        <property name="pointA" ref="pointA"/>
    </bean>

    <bean id="parentObjectPointListedTriangle" class="springjbrains.course.core.model.ObjectPointListedTriangle">
        <property name="points">
            <list>
                <ref bean="pointA"/>
            </list>
        </property>
    </bean>

    <!--Children-->
    <bean id="childObjectPointSeparatedTriangle" class="springjbrains.course.core.model.ObjectPointSeparatedTriangle" parent="parentObjectPointSeparatedTriangle">
        <property name="pointB" ref="pointB"/>
        <property name="pointC" ref="pointC"/>
    </bean>

    <bean id="childObjectPointListedTriangle" class="springjbrains.course.core.model.ObjectPointListedTriangle" parent="parentObjectPointListedTriangle">
        <property name="points">
            <list merge="true">
                <ref bean="pointB"/>
                <ref bean="pointC"/>
            </list>
        </property>
    </bean>

    <!--Lifecycle tips-->
    <bean id="lifecycleFactoryHooksBeanExample" class="springjbrains.course.core.lifecycle.LifecycleFactoryHooksBeanExample"/>
    <bean id="lifecycleXmlTagConfigBeanExample" class="springjbrains.course.core.lifecycle.LifecycleXmlTagConfigBeanExample"
        init-method="init"
        destroy-method="cleanUp">
    </bean>

    <!--<bean class="springjbrains.course.core.lifecycle.DisplayNameBeanPostProcessor"/>-->


</beans>